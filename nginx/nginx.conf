worker_processes 1;

error_log /var/log/nginx/error.log;
pid /var/log/nginx/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;
  fastcgi_buffers 16 16k;
  fastcgi_buffer_size 32k;
  proxy_buffer_size 128k;
  proxy_buffers 4 256k;
  proxy_busy_buffers_size 256k;
  log_format main 'CODEZERO $remote_addr - $remote_user [$time_local] "$request"'
  '$status $body_bytes_sent "$http_referer"'
  '"$http_user_agent" "$gzip_ratio" "$http_x_forwarded_for"';

  access_log /var/log/nginx/nginx-access.log main;
  error_log /var/log/nginx/nginx-error.log;

  sendfile on;
  #tcp_nopush on;
  #keepalive_timeout 0;
  keepalive_timeout 65;
  #gzip on;

  # server {
  #   listen 80;

  #   location / {
  #     return 301 https://$host$request_uri;
  #   }
  # }
  server {
    # listen 443 ssl;

    server_name dev.local;

    # ssl_certificate /etc/ssl/certs/dev.local.crt;
    # ssl_certificate_key /etc/ssl/private/dev.local.key;

    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection keep-alive;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;

    location / {
      proxy_pass http://dev.local/;
    }
  }

  # server {
  #   server_name auth.local;

  #   location / {
  #     proxy_pass http://auth/;
  #   }
  # }
  # server {
  #   server_name phpmyadmin.local;
  #   location / {
  #     proxy_pass http://phpmyadmin/;
  #   }
  # }
  # server {
  #   server_name seq.local;
  #   location / {
  #     proxy_pass http://seq/;
  #   }
  # }
  # server {
  #   server_name redis.local;
  #   location / {
  #     proxy_pass http://redis-commander/;
  #   }
  # }
  # server {
  #   server_name camunda.local;
  #   location / {
  #     proxy_pass http://camunda/;
  #   }
  # }
  # server {
  #   server_name rabbitmq.local;
  #   location / {
  #     proxy_pass http://rabbitmq/;
  #   }
  # }
}